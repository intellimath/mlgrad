name: Continuous Integration

on:
  push:
    branches:
      - "main"
    tags:
      - "*"
  pull_request:
    branches:
      - "main"
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  source_check:
    name: source check
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: "0"

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -v --editable '.[check]'

      # - name: black check
      #   run: |
      #     python -m black --check --diff --color .
      #
      # - name: black preview
      #   run: |
      #     python -m black --preview --diff --color .
      #
      # - name: isort check
      #   run: |
      #     python -m isort --check --diff --color .
      #
      # - name: pylint check
      #   run: |
      #     python -m pylint lib/mlgrad/

      # - name: cython-lint check
      #   run: |
      #     cython-lint lib/mlgrad/

  build_wheels:
    name: wheels for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: "0"

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.23.3
        with:
          output-dir: dist-wheel-${{ matrix.os }}

      - uses: actions/upload-artifact@v4
        with:
          name: dist-wheel-${{ matrix.os }}
          path: ./dist-wheel-${{ matrix.os }}/*.whl

  build_sdist:
    name: sdist on ${{ matrix.os }} with py ${{ matrix.ver.py }} numpy${{ matrix.ver.np }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        # https://github.com/scipy/oldest-supported-numpy/blob/main/setup.cfg
        ver:
          - { py: "3.9", np: "==1.20.0" }
          - { py: "3.10", np: "==1.21.6" }
          - { py: "3.11", np: "==1.23.2" }
          - { py: "3.12", np: "==1.26.2" }
          - { py: "3.13", np: "==2.1.0" }
          - { py: "3.13", np: ">=2.1.0" }
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: "0"

      - name: Set up Python ${{ matrix.ver.py }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.ver.py }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Install mlgrad
        run: |
          pip install -v --editable .

      #- name: Run tests
      #  run: |
      #    pip install "numpy${{ matrix.ver.np }}"
      #    python -m pytest -v ./tests/

      #- name: Build sdist
      #  run: |
      #    # PEP 517 package builder from pypa
      #    python -m build --sdist --outdir dist-sdist .

      - uses: actions/upload-artifact@v4
        if: matrix.os == 'ubuntu-latest' && matrix.ver.py == '3.11'
        with:
          name: dist-sdist
          path: dist-sdist/*.tar.gz

  coverage:
    name: coverage
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: '0'

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install "coveralls>=3.0.0"

      #- name: Install mlgrad
      #  run: |
      #    pip install -v --editable .[test]

